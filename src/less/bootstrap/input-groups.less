//
// Input groups
// --------------------------------------------------

// Base styles
// -------------------------
.sv-input-group {
  position: relative; // For dropdowns
  display: table;
  border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table

  // Undo padding and float of grid classes
  &[class*="sv-col-"] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  .sv-form-control {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
    z-index: 2;

    // IE9 fubars the placeholder attribute in text inputs and the arrows on
    // select elements in input groups. To fix it, we float the input. Details:
    // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
    float: left;

    width: 100%;
    margin-bottom: 0;
  }
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.sv-input-group-lg > .sv-form-control,
.sv-input-group-lg > .sv-input-group-addon,
.sv-input-group-lg > .sv-input-group-btn > .sv-btn {
  .sv-input-lg();
}
.sv-input-group-sm > .sv-form-control,
.sv-input-group-sm > .sv-input-group-addon,
.sv-input-group-sm > .sv-input-group-btn > .sv-btn {
  .sv-input-sm();
}


// Display as table-cell
// -------------------------
.sv-input-group-addon,
.sv-input-group-btn,
.sv-input-group .sv-form-control {
  display: table-cell;

  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}
// Addon and addon wrapper for buttons
.sv-input-group-addon,
.sv-input-group-btn {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}

// Text input groups
// -------------------------
.sv-input-group-addon {
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  font-weight: normal;
  line-height: 1;
  color: @input-color;
  text-align: center;
  background-color: @input-group-addon-bg;
  border: 1px solid @input-group-addon-border-color;
  border-radius: @border-radius-base;

  // Sizing
  &.sv-input-sm {
    padding: @padding-small-vertical @padding-small-horizontal;
    font-size: @font-size-small;
    border-radius: @border-radius-small;
  }
  &.sv-input-lg {
    padding: @padding-large-vertical @padding-large-horizontal;
    font-size: @font-size-large;
    border-radius: @border-radius-large;
  }

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}

// Reset rounded corners
.sv-input-group .sv-form-control:first-child,
.sv-input-group-addon:first-child,
.sv-input-group-btn:first-child > .sv-btn,
.sv-input-group-btn:first-child > .sv-btn-group > .sv-btn,
.sv-input-group-btn:first-child > .sv-dropdown-toggle,
.sv-input-group-btn:last-child > .sv-btn:not(:last-child):not(.sv-dropdown-toggle),
.sv-input-group-btn:last-child > .sv-btn-group:not(:last-child) > .sv-btn {
  .border-right-radius(0);
}
.sv-input-group-addon:first-child {
  border-right: 0;
}
.sv-input-group .sv-form-control:last-child,
.sv-input-group-addon:last-child,
.sv-input-group-btn:last-child > .sv-btn,
.sv-input-group-btn:last-child > .sv-btn-group > .sv-btn,
.sv-input-group-btn:last-child > .sv-dropdown-toggle,
.sv-input-group-btn:first-child > .sv-btn:not(:first-child),
.sv-input-group-btn:first-child > .sv-btn-group:not(:first-child) > .sv-btn {
  .border-left-radius(0);
}
.sv-input-group-addon:last-child {
  border-left: 0;
}

//For input groups in a table - with inline validation in use - we need some different selectors and resets for rounded corners
.sv-input-group-table > .sv-input-group {
  //reset border radius
  .sv-input-group-wrapper .sv-form-control {
    border-radius: @border-radius-base;
  }

  //now override just what we need to  
  .sv-input-group-addon ~ .sv-input-group-wrapper,
  .sv-input-group-btn ~ .sv-input-group-wrapper {
    > .sv-form-control {
      .border-left-radius(0);
    }
  }

  .sv-input-group-wrapper:not(:last-child) {
    > .sv-form-control {
      .border-right-radius(0);
    }
  }
}
// for input groups with inline validation to ensure border radii are applied
.sv-input-group>.sv-input-group-wrapper{   
   &:first-child .sv-form-control{
     .border-left-radius(@border-radius-base); 
     .border-right-radius(0);
   }   
   &:last-child .sv-form-control{
     .border-right-radius(@border-radius-base); 
      .border-left-radius(0);
   }   
  &:not(:last-child):not(:first-child) .sv-form-control{
    .border-right-radius(0);
    .border-left-radius(0);        
  }      
}    
    


// Button input groups
// -------------------------
.sv-input-group-btn {
  position: relative;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .sv-btn {
    position: relative;
    + .sv-btn {
      margin-left: -1px;
    }
    // Bring the "active" button to the front
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
  }

  // Negative margin to only have a 1px border between the two
  &:first-child {
    > .sv-btn,
    > .sv-btn-group {
      margin-right: -1px;
    }
  }
  &:last-child {
    > .sv-btn,
    > .sv-btn-group {
      margin-left: -1px;
    }
  }
}

//Tribal - if using input-group in a table with a smaller input field (e.g. sv-form-control-xs) then we need a surrounding block
.sv-input-group-table {
    display: inline-table;
}
