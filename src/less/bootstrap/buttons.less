//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

.sv-btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: @btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
  .button-size(@padding-base-vertical; @padding-base-horizontal; @font-size-base; @line-height-base; @border-radius-base);
  .user-select(none);

  &,
  &:active,
  &.sv-active {
    &:focus,
    &.sv-focus {
      .tab-focus();
    }
  }

  &:hover,
  &:focus,
  &.sv-focus {
    color: @btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.sv-active {
    outline: 0;
    background-image: none;
    .box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.sv-disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
    pointer-events: none; // Future-proof disabling of clicks
    .opacity(.65);
    .box-shadow(none);
  }
  
  //wrap text in fixed width buttons as necessary
  &.sv-btn-block {
    white-space: normal;
  }
}


// Alternate buttons
// --------------------------------------------------

.sv-btn-default {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
}
.sv-btn-primary {
  .button-variant(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
}
// Success appears as green
.sv-btn-success {
  .button-variant(@btn-success-color; @btn-success-bg; @btn-success-border);
}
// Info appears as blue-green
.sv-btn-info {
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
}
// Warning appears as orange
.sv-btn-warning {
  .button-variant(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
}
// Danger and error appear as red
.sv-btn-danger {
  .button-variant(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.sv-btn-link {
  color: @link-color;
  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.sv-active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    .box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: @link-hover-color;
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: @btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.sv-btn-block {
    width: 100%;
  }
}

//Button container used when button is outside of a table or form (e.g in a panel or standalone)
.sv-btn-container {
  margin-left: -(@grid-gutter-width / 2);
  margin-right: -(@grid-gutter-width / 2);
    
  &:extend(.sv-clearfix all);  
 
  .sv-btn {
    margin-bottom: (@padding-base-vertical * 2);  
  }
}

//Inline block allows buttons to be centred and hidden buttons to be ignored. Overrides the grid layout to do this though, so should be used sparingly
.sv-btn-container-inline {
  text-align: center;
  
  input[type="submit"],
  input[type="reset"],
  input[type="button"],
  .sv-btn {
    float: none; //remove float so we can centre the elements
    margin-left: (@grid-gutter-width / 2) - 2; //adjust by 2 to compensate for the button border (1 left, 1 right)
    margin-right: (@grid-gutter-width / 2) - 2;
    white-space: normal; //wrap text in fixed width buttons as necessary
  }
}

.sv-btn-container-inline {
  .loop-inline-btn-widths(@grid-columns,xs); //call mix-in to build  
}

@media (min-width: @screen-sm-min) {
  .sv-btn-container-inline {
    .loop-inline-btn-widths(@grid-columns,sm);   
  }
}

@media (min-width: @screen-md-min) {
  .sv-btn-container-inline {
    .loop-inline-btn-widths(@grid-columns,md);   
  }
}

@media (min-width: @screen-lg-min) {
  .sv-btn-container-inline {
    .loop-inline-btn-widths(@grid-columns,lg);   
  }
}